plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$dependencyManagementVersion"
}

group = 'com.MyProject'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set( 'springbootVersion' , "$springBootVersion")
    set('springCloudVersion', "$springCloudVersion")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // Monitoring & Resilience
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    // Zipkin & Sleuth
//    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // API documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'

    // Eureka client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // YAML
    implementation 'org.yaml:snakeyaml:2.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Postgres
    runtimeOnly 'org.postgresql:postgresql'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.register("prepareKotlinBuildScriptModel") {}

tasks.named('test') {
    useJUnitPlatform()
}
